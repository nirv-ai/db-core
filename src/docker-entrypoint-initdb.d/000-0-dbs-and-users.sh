#!/usr/bin/env bash

set -e

psql -v ON_ERROR_STOP=1 --username "$POSTGRES_USER" --dbname "$POSTGRES_DB" <<-EOSQL
	REVOKE CREATE ON SCHEMA public FROM PUBLIC;

	CREATE DATABASE $DEFAULT_DB WITH OWNER $POSTGRES_USER;
	\connect $DEFAULT_DB
	CREATE SCHEMA IF NOT EXISTS $DEFAULT_DB;
	REVOKE ALL ON DATABASE $DEFAULT_DB FROM PUBLIC;

	CREATE ROLE readonly;
	GRANT USAGE ON SCHEMA $DEFAULT_DB TO readonly;
	GRANT CONNECT ON DATABASE $DEFAULT_DB TO readonly;
	GRANT SELECT ON ALL TABLES IN SCHEMA $DEFAULT_DB TO readonly;
	ALTER DEFAULT PRIVILEGES IN SCHEMA $DEFAULT_DB GRANT SELECT ON TABLES TO readonly;

	CREATE ROLE readwrite;
	GRANT USAGE ON SCHEMA $DEFAULT_DB TO readwrite;
	GRANT USAGE, CREATE ON SCHEMA $DEFAULT_DB TO readwrite;
	GRANT CONNECT ON DATABASE $DEFAULT_DB TO readwrite;
	GRANT SELECT, INSERT, UPDATE, DELETE ON ALL TABLES IN SCHEMA $DEFAULT_DB TO readwrite;
	ALTER DEFAULT PRIVILEGES IN SCHEMA $DEFAULT_DB GRANT SELECT, INSERT, UPDATE, DELETE ON TABLES TO readwrite;
	GRANT USAGE ON ALL SEQUENCES IN SCHEMA $DEFAULT_DB TO readwrite;
	ALTER DEFAULT PRIVILEGES IN SCHEMA $DEFAULT_DB GRANT USAGE ON SEQUENCES TO readwrite;

	CREATE ROLE $DEFAULT_DB_USER WITH PASSWORD '$DEFAULT_DB_USER_PW' LOGIN INHERIT
		IN ROLE readonly;

	CREATE ROLE $DEFAULT_DB_ADMIN WITH PASSWORD '$DEFAULT_DB_ADMIN_PW' LOGIN INHERIT
		IN ROLE readwrite;
	grant execute on all functions in schema nirvai to readwrite;

	GRANT ALL PRIVILEGES ON DATABASE $DEFAULT_DB TO $POSTGRES_USER;
EOSQL
