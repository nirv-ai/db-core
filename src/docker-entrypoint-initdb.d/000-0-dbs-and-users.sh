#!/usr/bin/env bash

set -e

USE_SCHEMA="${USE_SCHEMA:-$DEFAULT_DB}"
USE_DB="${USE_DB:-$DEFAULT_DB}"

psql -v ON_ERROR_STOP=1 --username "$POSTGRES_USER" --dbname "$POSTGRES_DB" <<-EOSQL
	REVOKE CREATE ON SCHEMA public FROM PUBLIC;

	CREATE DATABASE $USE_DB WITH OWNER $POSTGRES_USER;
	\connect $USE_DB
	CREATE SCHEMA IF NOT EXISTS $USE_SCHEMA;
	REVOKE ALL ON DATABASE $USE_DB FROM PUBLIC;

	CREATE ROLE readonly;
	GRANT USAGE ON SCHEMA $USE_SCHEMA TO readonly;
	GRANT CONNECT ON DATABASE $USE_DB TO readonly;
	GRANT SELECT ON ALL TABLES IN SCHEMA $USE_SCHEMA TO readonly;
	ALTER DEFAULT PRIVILEGES IN SCHEMA $USE_SCHEMA GRANT SELECT ON TABLES TO readonly;

	CREATE ROLE readwrite;
	GRANT USAGE ON SCHEMA $USE_SCHEMA TO readwrite;
	GRANT USAGE, CREATE ON SCHEMA $USE_SCHEMA TO readwrite;
	GRANT CONNECT ON DATABASE $USE_DB TO readwrite;
	GRANT SELECT, INSERT, UPDATE, DELETE ON ALL TABLES IN SCHEMA $USE_SCHEMA TO readwrite;
	ALTER DEFAULT PRIVILEGES IN SCHEMA $USE_SCHEMA GRANT SELECT, INSERT, UPDATE, DELETE ON TABLES TO readwrite;
	GRANT USAGE ON ALL SEQUENCES IN SCHEMA $USE_SCHEMA TO readwrite;
	ALTER DEFAULT PRIVILEGES IN SCHEMA $USE_SCHEMA GRANT USAGE ON SEQUENCES TO readwrite;

	CREATE ROLE $DEFAULT_DB_USER WITH PASSWORD '$DEFAULT_DB_USER_PW' LOGIN INHERIT
		IN ROLE readonly;

	CREATE ROLE $DEFAULT_DB_ADMIN WITH PASSWORD '$DEFAULT_DB_ADMIN_PW' LOGIN INHERIT
		IN ROLE readwrite;
	grant execute on all functions in schema $USE_SCHEMA to readwrite;

	GRANT ALL PRIVILEGES ON DATABASE $USE_DB TO $POSTGRES_USER;
EOSQL
